---
import { Link2 } from '@lucide/astro';
import LinkButton from './LinkButton.astro';
import { TAGS } from './TagsIcons.astro';
import ExitIcon from '@/components/icons/Exit.astro';

const PROJECTS = [
	{
		title: 'AgroTraz - Gestion de Fabricas',
		description: `Desarrollo de una plataforma de gestión integral para fábricas, diseñada para optimizar la administración de recursos y procesos. La aplicación permite a los usuarios gestionar y controlar diversos aspectos de la producción, incluyendo la planificación, seguimiento y análisis de datos en tiempo real.\n
		La interfaz de usuario es intuitiva y fácil de usar, lo que facilita la navegación y el acceso a la información crítica. La plataforma incluye funcionalidades avanzadas como la generación de informes personalizados, la integración con sistemas externos y la capacidad de adaptarse a las necesidades específicas de cada fábrica.\n
		Además, se implementaron medidas de seguridad robustas para proteger la información sensible y garantizar la privacidad de los datos. La aplicación está diseñada para ser escalable y flexible, permitiendo a las fábricas crecer y adaptarse a los cambios en el mercado y en la tecnología.`,
		link: 'https://landingagrotraz.weaselweb.es/',
		image: ['/projects/gesfap.webp'],
		tags: [TAGS.TYPESCRIPT, TAGS.ASTRO, TAGS.REACT, TAGS.TAILWIND, TAGS.DOCKER, TAGS.MARIADB]
	},
	{
		title: 'Goblin Ajedrez - Juego de ajedrez online',
		description: `GoblinAjedrez es un proyecto en el que he trabajado en la optimización y mejora integral de su estructura y funcionalidad. He reescrito la mayoría de los archivos, optimizándolos y definiendo correctamente cada función, constante y parámetro para mejorar la legibilidad y el mantenimiento del código. Además, he realizado una optimización del SEO y la mejora de los metadatos para incrementar la visibilidad en buscadores.\n
		El logo original en formato PNG fue convertido a SVG para garantizar su correcta visualización en distintos tamaños y dispositivos. En términos de diseño, implementé Bootstrap para mejorar la estética y mantener una experiencia de usuario coherente con la estructura previa del proyecto, basado en Python, archivos .py, templates y archivos estáticos. También realicé una reorganización de la estructura de carpetas internas para optimizar la gestión de los archivos.\n
		La sección de puzzles ha sido completamente rediseñada e implementada desde cero, incluyendo tres modos de juego distintos: puzzles de tres vidas, puzzles de tres minutos y puzzles por temas. Estos últimos cuentan con una amplia gama de ejercicios diseñados para el entrenamiento, organizados en diferentes tipos, apartados y subcategorías. También se han incorporado puzzles por rating, permitiendo una experiencia más personalizada según el nivel del usuario. Todo el sistema ha sido reescrito con la integración de Chessground, proporcionando un tablero más avanzado que permite modificar tanto el fondo como las piezas, con más de veinte opciones distintas para cada uno. Además, este nuevo tablero es completamente redimensionable y ha mejorado significativamente la experiencia en dispositivos móviles, eliminando errores previos como bloqueos o fallos en la interacción táctil. También se ha añadido soporte para el clic secundario, permitiendo la creación de círculos, flechas y diferentes estados antes de realizar un movimiento.\n
		Junto con estas mejoras, corregí errores en enlaces y rutas, asegurando una navegación más intuitiva. Implementé ajustes en la estructura de los cursos, optimizando su accesibilidad y funcionalidad. El diseño fue adaptado para ser completamente responsivo, garantizando una experiencia óptima en dispositivos móviles y tablets. Se añadió la posibilidad de alternar entre un modo oscuro y un modo claro para mejorar la accesibilidad y personalización del entorno. También implementé un sistema de autenticación que incluye registro y login mediante correo y contraseña, con notificaciones enviadas al correo electrónico para mayor seguridad.\n
		Con todas estas mejoras, GoblinAjedrez es ahora una plataforma más eficiente, rápida y accesible, proporcionando una mejor experiencia tanto para jugadores como para estudiantes de ajedrez.`,
		link: 'https://goblinajedrez.com/',
		image: ['/projects/goblinajedrez-2.webp', '/projects/goblinajedrez-1.webp', '/projects/goblinajedrez.webp'],
		tags: [TAGS.PYTHON, TAGS.JINJA2, TAGS.HTML, TAGS.BOOTSTRAP, TAGS.SQLITE]
	},
	{
		title: 'CMS - Incantatem',
		description: `Creación de un CMS personalizado enfocado en la gestión eficiente de archivos e imágenes. Este sistema permite a los administradores subir, editar y organizar archivos multimedia, generando metadatos en formato JSON que vinculan cada elemento con su información correspondiente.\n
		El CMS cuenta con dos vistas: una para usuarios no técnicos que facilita la visualización y modificación de datos sin necesidad de interactuar con JSON, y otra avanzada para usuarios técnicos que permite editar el JSON directamente. Además, se implementó una funcionalidad en tiempo real utilizando WebSocket, lo que permite monitorear y visualizar cambios en el stock de los elementos.\n
		Este proyecto no solo optimiza la gestión de contenido, sino que también integra características avanzadas para adaptarse a las necesidades específicas de la tienda.`,
		link: 'https://github.com/SrGobi',
		image: ['/projects/custom_cms.webp'],
		tags: [TAGS.TYPESCRIPT, TAGS.NODE, TAGS.REACT, TAGS.TAILWIND, TAGS.DOCKER]
	},
	{
		title: 'ESP CUSTOMS LLC',
		description:
			'Responsable de la creación y desarrollo integral de la plataforma. Diseñé y desarrollé desde cero tanto el servidor como el panel web, implementando una base de datos robusta, integración de APIs internas/externas y un sistema de eventos para la comunicación y componentización del proyecto. Mejoré la eficiencia del sistema, implementé pruebas exhaustivas y una gestión continua, logrando un despliegue eficiente y un soporte eficaz.',
		link: 'https://espcustoms.xyz',
		image: ['/projects/espcustoms.webp'],
		tags: [TAGS.TYPESCRIPT, TAGS.NODE, TAGS.ANGULAR, TAGS.BOOTSTRAP, TAGS.MONGODB]
	},
	{
		title: 'AuraFut - Ecommerce',
		description: `Desarrollo de una tienda online de productos deportivos estructurada en tres módulos principales. Cada componente ha sido optimizado para ofrecer una experiencia de usuario rápida y eficiente, asegurando un rendimiento óptimo de la plataforma.\n
		Admin: Panel de administración (admin.aurafut.com) para gestionar estadísticas, productos, pedidos y usuarios, con opciones de diseño personalizables. Incluye un sistema avanzado de subida de imágenes que transcodifica a base64 con optimización previa.\n
		Cliente: Plataforma de compra (aurafut.com), con funcionalidades como registro y login de usuarios, perfiles personales, gestión de pedidos, y un sistema avanzado de compra que incluye diversas pasarelas de pago (Paypal, Mastercard, Visa, Google Pay). También cuenta con un buscador avanzado de productos, filtros personalizables y una interfaz intuitiva para mejorar la experiencia del usuario.\n
		Server: Servidor manejado a través de API, construido con Express, que incorpora sistemas de seguridad Middleware y autenticación de tokens, garantizando un entorno seguro y eficiente para la gestión de datos y transacciones.`,
		link: 'https://aurafut.com',
		image: ['/projects/aurafut.webp'],
		tags: [TAGS.TYPESCRIPT, TAGS.NODE, TAGS.REACT, TAGS.BOOTSTRAP, TAGS.MONGODB]
	},
	{
		title: 'Canvacard - NPM',
		description: `Paquete NPM que permite a los desarrolladores crear tarjetas personalizadas de forma sencilla y rápida. Canvacard ofrece una amplia gama de plantillas predefinidas y personalizables, así como la posibilidad de crear tarjetas desde cero. Los usuarios pueden añadir texto, imágenes, iconos y formas, y personalizar el diseño con colores y fuentes personalizadas.\n
		Este proyecto ha sido desarrollado con JavaScript, @napi-rs/canvas, @skyra/gifenc y con TypeScript para realizar los tipados e interfaces . Canvacard es una herramienta versátil y eficiente que permite a los desarrolladores crear tarjetas personalizadas de forma rápida y sencilla.`,
		link: 'https://canvacard.srgobi.com/',
		image: ['/projects/canvacard.webp'],
		tags: [TAGS.JAVASCRIPT, TAGS.TYPESCRIPT]
	},
	{
		title: 'App Discord Peereira7',
		description: 'Creación y gestión de una aplicación de Discord con más de 50 comandos y soporte completo para todos los eventos. Optimización en la gestión de usuarios y mensajes para mejorar la experiencia en el servidor.',
		link: 'https://discord.gg/peereira7',
		image: ['/projects/Servidor_Peereira7.webp'],
		tags: [TAGS.TYPESCRIPT, TAGS.NODE, TAGS.DISCORD, TAGS.MONGODB]
	},
	{
		title: 'LibertadCripto - ComuniDAO',
		description: 'Plataforma para aprender sobre dinero, cripto y web3 con el contenido que se creó. Se puede acceder a la plataforma a través de Discord y la web. Se creó un bot para el servidor de Discord que permite a los usuarios interactuar con la plataforma y obtener mucho aprendizaje. Los usuarios pueden aprender entre si en la plataforma.',
		link: 'https://www.instagram.com/libertadcripto',
		image: ['/projects/Servidor_LibertadCripto.webp'],
		tags: [TAGS.TYPESCRIPT, TAGS.NODE, TAGS.DISCORD, TAGS.MONGODB]
	}
];
---

<div class="flex flex-col gap-y-16">
	{
		PROJECTS.map(({ image, title, description, tags, link }) => (
			<article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
				<div class="w-full md:w-1/2">
					<div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-zinc-800 lg:hover:border-zinc-700 lg:hover:bg-zinc-800/50">
						<label for={`image-modal-toggle-${title}`} class="cursor-pointer">
							<img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-full transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image[0]} />
						</label>
					</div>
				</div>

				<div class="w-full md:w-1/2 md:max-w-lg">
					<h3 class="text-2xl font-bold text-zinc-800 dark:text-zinc-100">{title}</h3>
					<div class="flex flex-wrap mt-2">
						<ul class="flex xl:flex-row flex-wrap mb-2 gap-2">
							{tags.map((tag) => (
								<li>
									<span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}>
										<tag.icon class="size-4" />
										{tag.name}
									</span>
								</li>
							))}
						</ul>
						<div class="mt-2 text-zinc-700 dark:text-zinc-400">
							{description.length > 200 ? (
								<>
									{/* Mostramos los primeros 200 caracteres */}
									<p>{description.slice(0, 200)}...</p>
									{/* Botón para ver la descripción completa */}
									<label for={`modal-toggle-${title}`} class="flex items-center gap-2 group-hover:underline decoration-zinc-500 decoration-dotted underline-offset-4 cursor-pointer">
										Ver más detalles
										<svg width="13" height="13" stroke="currentColor" stroke-width="2" class="lucide-icon lucide lucide-arrow-up-right opacity-50 duration-200 group-hover:translate-x-[1.5px] group-hover:opacity-100" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-linecap="round" stroke-linejoin="round">
											<path d="M7 7h10v10" />
											<path d="M7 17 17 7" />
										</svg>
									</label>
									<div>
										{/* Modal para la imagen ampliada */}
										<input type="checkbox" id={`image-modal-toggle-${title}`} class="hidden peer" />
										<div class="fixed top-0 right-0 left-0 z-50 justify-center items-center w-full h-full md:inset-0 max-h-full backdrop-blur-2xl transition peer-checked:flex hidden">
											<div class="relative p-4 w-full max-w-max">
												<div class="relative bg-neutral-200 dark:bg-black rounded-lg shadow-sm">
													<label for={`image-modal-toggle-${title}`} class="absolute top-2 right-2 bg-white/5 border-2 dark:border-white/10 border-zinc-300 rounded-full p-1 cursor-pointer">
														<ExitIcon class="size-4 text-zinc-300 dark:text-zinc-100" />
														<span class="sr-only">Cerrar modal</span>
													</label>
													<img src={image[0]} alt={`Imagen ampliada de ${title}`} class="object-cover w-[100vh] h-full rounded-lg" />
												</div>
											</div>
										</div>
									</div>
									<div>
										{/* Modal para la descripción completa */}
										<input type="checkbox" id={`modal-toggle-${title}`} class="hidden peer" />
										<div class="fixed top-0 right-0 left-0 z-50 justify-center items-center w-full h-full md:inset-0 max-h-full backdrop-blur-2xl transition peer-checked:flex hidden">
											<div class="relative p-4 w-full max-w-2xl max-h-full">
												<div class="relative bg-neutral-200 dark:bg-black rounded-lg shadow-sm">
													<div class="flex items-center justify-between p-4 md:p-5 border-b dark:border-white/10 border-zinc-300 rounded-t">
														<h3 class="text-xl font-semibold text-gray-900 dark:text-zinc-100">Detalles de {title}</h3>
														<label for={`modal-toggle-${title}`} class="bg-white/5 border dark:border-white/10 border-zinc-300 rounded-full inline-flex justify-center items-center gap-x-2 py-1 px-2 md:py-2 md:px-4 text-xs md:text-base transition hover:scale-110 hover:bg-white/10 cursor-pointer">
															<ExitIcon class="size-4 text-zinc-900/90 dark:text-zinc-100/90" />
															<span class="sr-only">Cerrar modal</span>
														</label>
													</div>
													<div class="p-4 md:p-5 space-y-4 max-h-[60vh] overflow-y-auto">
														<p style={{ whiteSpace: 'pre-line' }}>{description}</p>
													</div>
													<div class="flex items-center p-4 md:p-5 border-t dark:border-white/10 border-zinc-300 rounded-b">
														<label for={`modal-toggle-${title}`} class="bg-white/5 border dark:border-white/10 border-zinc-300 rounded-full inline-flex justify-center items-center gap-x-2 py-1 px-2 md:py-2 md:px-4 text-xs md:text-base transition hover:scale-110 hover:bg-white/10 cursor-pointer">
															Cerrar
														</label>
													</div>
												</div>
											</div>
										</div>
									</div>
								</>
							) : (
								<p style={{ whiteSpace: 'pre-line' }}>{description}</p>
							)}
						</div>
						<footer class="flex gap-x-4 items-end justify-start mt-4">
							<LinkButton href={link}>
								<Link2 class="size-4 mr-1" />
								Ir al sitio web
							</LinkButton>
						</footer>
					</div>
				</div>
			</article>
		))
	}
</div>
<script>
	document.addEventListener('DOMContentLoaded', () => {
		const modalIds = [
			'modal-toggle-AgroTraz - Gestion de Fabricas',
			'modal-toggle-Goblin Ajedrez - Juego de ajedrez online',
			'modal-toggle-CMS - Incantatem',
			'modal-toggle-ESP CUSTOMS LLC',
			'modal-toggle-AuraFut - Ecommerce',
			'modal-toggle-Canvacard - NPM',
			'modal-toggle-App Discord Peereira7',
			'modal-toggle-LibertadCripto - ComuniDAO',
			'image-modal-toggle-AgroTraz - Gestion de Fabricas',
			'image-modal-toggle-Goblin Ajedrez - Juego de ajedrez online',
			'image-modal-toggle-CMS - Incantatem',
			'image-modal-toggle-ESP CUSTOMS LLC',
			'image-modal-toggle-AuraFut - Ecommerce',
			'image-modal-toggle-Canvacard - NPM',
			'image-modal-toggle-App Discord Peereira7',
			'image-modal-toggle-LibertadCripto - ComuniDAO'
		];

		modalIds.forEach((id) => {
			const modal = document.getElementById(id);
			if (modal) {
				modal.addEventListener('change', () => {
					if ((modal as HTMLInputElement).checked) {
						document.body.classList.add('overflow-hidden');
					} else {
						document.body.classList.remove('overflow-hidden');
					}
				});
			}
		});
	});
</script>
